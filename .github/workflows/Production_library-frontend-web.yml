name: Build docker image and deploy to ACR and Azure Web App - library-frontend-web

on:
  push:
    branches:
      - Production
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: 'ubuntu-latest'
    environment:
      name: 'production'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: 'Login to ACR using UAMI'
      uses: azure/login@v2
      with:
         client-id: ${{ secrets.UAMI_CLIENT_ID }}
         tenant-id: ${{ secrets.UAMI_TENANT_ID }}
         subscription-id: ${{ secrets.UAMI_SUBSCRIPTION_ID }}

    - name: Build and push container image to registry
      run: | 
        az acr login --name libraryprod
        docker build --cache-from=type=registry,ref=libraryprod.azurecr.io/library-frontend:latest -t libraryprod.azurecr.io/library-frontend:${{ github.sha }} -t libraryprod.azurecr.io/library-frontend:latest .
        docker push libraryprod.azurecr.io/library-frontend:${{ github.sha }}
        docker push libraryprod.azurecr.io/library-frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.UAMI_CLIENT_ID }}
        tenant-id: ${{ secrets.UAMI_TENANT_ID }}
        subscription-id: ${{ secrets.UAMI_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'library-frontend-web'
        slot-name: 'production'
        images: 'libraryprod.azurecr.io/library-frontend:latest'
